syntax = "proto3";

package backend;

option go_package = "./pb";

// Fetch Setup Nickname Pool

message FetchSetupNicknamePoolRequest {

}

message FetchSetupNicknamePoolResponse {
  int64 code = 1;
  string message = 2;
  repeated string nicknamesPool = 3;
}

// Login

message LoginRequest {
  string nickname = 1;
  string user_agent = 2;
  string client_ip = 3;
}

message LoginResponse {
  int64 code = 1;
  string message = 2;
  string access_token = 3;
  int64 access_token_expires_at = 4;
  string refresh_token = 5;
  int64 refresh_token_expires_at = 6;
  string user_id = 7;
}

// Validate Token

message ValidateTokenRequest { string access_token = 1; }

message ValidateTokenResponse {
  int64 code = 1;
  string message = 2;
  string user_id = 3;
}


// Refresh Token

message RenewTokenRequest { string refresh_token = 1; }

message RenewTokenResponse {
  int64 code = 1;
  string message = 2;
  string access_token = 3;
  int64 access_token_expires_at = 4;
}



// Get User Details

message GetUserDetailsRequest { string user_id = 1; }

message Content {
  string id = 1;
  string file_name = 2;
  uint32 size = 3;
}

message GetUserDetailsResponse {
  int64 code = 1;
  string message = 2;
  string user_id = 3;
  int64 created_at = 4;
  string username = 5;
  repeated Content contents = 6;
  
}

message FileUploadRequest {
    string file_name = 1;
    string id = 2;
    string user_id = 3;
    bytes chunk = 4;
}
message FileUploadResponse {
  string file_name = 1;
  uint32 size = 2;
}

message Glossary {
  map<string, TermDefinitionList> definitions = 1;
}

message TermDefinition {
  string term = 1;
  string definition = 2;
}

message TermDefinitionList {
  repeated TermDefinition terms = 1;
}

message GetContentGlossaryRequest {
   string content_id = 1;
}

message GetContentGlossaryResponse {
  int64 code = 1;
  string message = 2;
  Glossary glossary = 3;
}

message DetailedExplanation {
  string index = 1;
  string content = 2;
}

message Example {
  string scenario = 1;
  string description = 2;
  string relation = 3;
}

message Quiz {
  string question = 1;
  string type = 2;
  repeated string options = 3;
  string correct_answer = 4;
}

message Section {
  string section_title = 1;
  string summary = 2;
  map<string, DetailedExplanation> detailed_explanations = 3;
  repeated Example examples = 4;
  repeated Quiz quizzes = 5;
}

message GetContentSummariesRequest {
   string content_id = 1;
}

message GetContentSummariesResponse {
  int64 code = 1;
  string message = 2;
  repeated Section summaries = 3;
}

service BackendService {
  rpc FetchSetupNicknamePool(FetchSetupNicknamePoolRequest) returns (FetchSetupNicknamePoolResponse) {}
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse) {}
  rpc RenewToken(RenewTokenRequest) returns (RenewTokenResponse) {}
  rpc GetUserDetails(GetUserDetailsRequest) returns (GetUserDetailsResponse) {}
  rpc UploadFile(stream FileUploadRequest) returns(FileUploadResponse);
  rpc GetContentGlossary(GetContentGlossaryRequest) returns (GetContentGlossaryResponse) {};
  rpc GetContentSummaries(GetContentSummariesRequest) returns (GetContentSummariesResponse) {};
}